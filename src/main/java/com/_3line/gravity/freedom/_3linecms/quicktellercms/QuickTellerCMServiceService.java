
package com._3line.gravity.freedom._3linecms.quicktellercms;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "QuickTellerCMServiceService", targetNamespace = "http://service.arius.rs", wsdlLocation = "${cms.card.quickteller_soap_wsdl_url}")
public class QuickTellerCMServiceService
    extends Service
{

    private final static URL QUICKTELLERCMSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException QUICKTELLERCMSERVICESERVICE_EXCEPTION;
    private final static QName QUICKTELLERCMSERVICESERVICE_QNAME = new QName("http://service.arius.rs", "QuickTellerCMServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("${cms.card.quickteller_soap_url}");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        QUICKTELLERCMSERVICESERVICE_WSDL_LOCATION = url;
        QUICKTELLERCMSERVICESERVICE_EXCEPTION = e;
    }

    public QuickTellerCMServiceService() {
        super(__getWsdlLocation(), QUICKTELLERCMSERVICESERVICE_QNAME);
    }

    public QuickTellerCMServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), QUICKTELLERCMSERVICESERVICE_QNAME, features);
    }

    public QuickTellerCMServiceService(URL wsdlLocation) {
        super(wsdlLocation, QUICKTELLERCMSERVICESERVICE_QNAME);
    }

    public QuickTellerCMServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, QUICKTELLERCMSERVICESERVICE_QNAME, features);
    }

    public QuickTellerCMServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QuickTellerCMServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns QuickTellerCMService
     */
    @WebEndpoint(name = "QuickTellerCMService")
    public QuickTellerCMService getQuickTellerCMService() {
        return super.getPort(new QName("http://service.arius.rs", "QuickTellerCMService"), QuickTellerCMService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QuickTellerCMService
     */
    @WebEndpoint(name = "QuickTellerCMService")
    public QuickTellerCMService getQuickTellerCMService(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.arius.rs", "QuickTellerCMService"), QuickTellerCMService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (QUICKTELLERCMSERVICESERVICE_EXCEPTION!= null) {
            throw QUICKTELLERCMSERVICESERVICE_EXCEPTION;
        }
        return QUICKTELLERCMSERVICESERVICE_WSDL_LOCATION;
    }

}
